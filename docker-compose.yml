version: '3.8'

services:
  gateway:
    build:
      context: ./api-gateway
    ports:
      - "5000:5000"
    networks:
      - app-network
    depends_on:
      - admin-service
      - auth-service
      - patient-service
      - chatbot-service

  admin-service:
    build:
      context: ./admin-service
    env_file:
      - .env
    environment:
      - DB_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - "5002:5002"
    depends_on:
      - db
    networks:
      - app-network
    command: [ "./wait-for-db.sh", "python", "app.py" ]

  auth-service:
    build:
      context: ./auth-service
    environment:
      - DB_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - "5001:5001"
    depends_on:
      - db
    networks:
      - app-network
    command: [ "./wait-for-db.sh", "python", "app.py" ]

  patient-service:
    build:
      context: ./patient-service
    environment:
      - DB_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - "5003:5003"
    depends_on:
      - db
    networks:
      - app-network
    command: [ "./wait-for-db.sh", "python", "app.py" ]

  chatbot-service:
    build:
      context: ./chatbot-service
    ports:
      - "5004:5004"
    networks:
      - app-network
    command: [ "python", "app.py" ]

  db:
    image: postgres:14
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - app-network

volumes:
  pgdata:

networks:
  app-network:
    driver: bridge
